generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* NOTA: usamos cadenas en lugar de enums nativos para m√°xima compatibilidad. */

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("BROKER") // "ADMIN" | "BROKER"
  quotes       Quote[]
  clients      Client[] @relation("BrokerClients")
  createdAt    DateTime @default(now())
}

model Client {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  phone     String?
  broker    User     @relation(fields: [brokerId], references: [id], name: "BrokerClients", onDelete: Cascade)
  brokerId  String
  quotes    Quote[]
  createdAt DateTime @default(now())
}

model Project {
  id           String   @id @default(cuid())
  name         String   @unique
  coverUrl     String?
  address      String
  city         String
  country      String
  deliveryDate DateTime?
  units        Unit[]
  createdAt    DateTime @default(now())
}

model Unit {
  id          String   @id @default(cuid())
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   String
  code        String
  typology    String
  m2          Int
  bedrooms    Int
  bathrooms   Int
  price       Int
  currency    String   // "UF" | "USD"
  status      String   @default("AVAILABLE") // AVAILABLE | RESERVED_PENDING | RESERVED_CONFIRMED | SOLD
  quotes      Quote[]
  createdAt   DateTime @default(now())
}

model Quote {
  id                   String   @id @default(cuid())
  unit                 Unit     @relation(fields: [unitId], references: [id], onDelete: Cascade)
  unitId               String
  broker               User     @relation(fields: [brokerId], references: [id], onDelete: Cascade)
  brokerId             String
  client               Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId             String
  downPaymentPct       Int
  installments         Int
  calculatedDownPayment Int
  pdfUrl               String?
  createdAt            DateTime @default(now())
}
