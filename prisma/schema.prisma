generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   // "ADMIN" | "BROKER"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // ðŸ”¥ RelaciÃ³n inversa requerida por Client.broker
  clients   Client[]

  // Si en el futuro vuelves a relacionar Quote con User (p.ej. brokerId),
  // aquÃ­ agregarÃ­as: quotes Quote[]
}

model Client {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?

  // ðŸ”¥ Ownership del cliente por un broker (User)
  brokerId  String?
  broker    User?    @relation(fields: [brokerId], references: [id])

  quotes    Quote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([brokerId])
}


model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  currency    String   @default("USD")
  units       Unit[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Unit {
  id         String   @id @default(cuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  code       String
  typology   String
  m2         Int
  bedrooms   Int
  bathrooms  Int
  floor      Int?
  price      Int
  available  Boolean  @default(true)
  quotes     Quote[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([projectId])
}

model Quote {
  id               String    @id @default(cuid())
  unitId           String
  unit             Unit      @relation(fields: [unitId], references: [id])
  clientId         String
  client           Client    @relation(fields: [clientId], references: [id])
  downPaymentPct   Int
  installments     Int
  installmentValue Int
  currency         String
  receipt          Receipt?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@index([unitId])
  @@index([clientId])
}

model Receipt {
  id        String   @id @default(cuid())
  quoteId   String   @unique
  quote     Quote    @relation(fields: [quoteId], references: [id])
  url       String
  createdAt DateTime @default(now())
}
