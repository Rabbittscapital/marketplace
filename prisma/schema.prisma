// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  image     String?
  role      String   @default("BROKER") // "ADMIN" | "BROKER"

  clients   Client[]
  quotes    Quote[]  @relation("BrokerQuotes")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String?
  phone     String?

  broker    User     @relation(fields: [brokerId], references: [id])
  brokerId  String

  quotes    Quote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String  @id @default(cuid())
  name        String
  description String?
  currency    String  // "USD" | "UF"

  units       Unit[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Unit {
  id         String   @id @default(cuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])

  // === Campos identificadores/visualización ===
  // 'code' lo usa tu importación masiva (bulk). Lo dejamos opcional para no romper otros flujos.
  code       String?  @db.VarChar(64)
  // Si ya tienes 'number' y lo usas en UI, puedes mantener ambos sin problema.
  number     String?  @db.VarChar(64)

  // === Atributos de la unidad ===
  typology   String
  m2         Int?
  bedrooms   Int?

  // === Comerciales ===
  price      Int
  available  Boolean  @default(true)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  quotes     Quote[]
}

model Quote {
  id               String  @id @default(cuid())

  unit             Unit    @relation(fields: [unitId], references: [id])
  unitId           String

  client           Client  @relation(fields: [clientId], references: [id])
  clientId         String

  broker           User    @relation("BrokerQuotes", fields: [brokerId], references: [id])
  brokerId         String

  downPaymentPct   Int
  installments     Int
  installmentValue Int
  totalPrice       Int
  currency         String // tomado de project.currency
  receiptUrl       String?

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
